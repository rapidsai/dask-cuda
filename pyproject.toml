# Copyright (c) 2025, NVIDIA CORPORATION.
[build-system]
build-backend = "rapids_build_backend.build"
requires = [
    "rapids-build-backend>=0.4.0,<0.5.0dev0",
    "setuptools>=64.0.0",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit dependencies.yaml and run `rapids-dependency-file-generator`.

[project]
name = "dask-cuda"
dynamic = ["version"]
description = "Utilities for Dask and CUDA interactions"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [
    { name = "NVIDIA Corporation" },
]
license = { text = "Apache-2.0" }
requires-python = ">=3.10"
dependencies = [
    "click >=8.1",
    "cuda-core==0.3.*",
    "numba-cuda>=0.19.1,<0.20.0a0",
    "numpy>=1.23,<3.0a0",
    "nvidia-ml-py>=12",
    "pandas>=1.3",
    "rapids-dask-dependency==25.12.*,>=0.0.0a0",
    "zict>=2.0.0",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit dependencies.yaml and run `rapids-dependency-file-generator`.
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Database",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.scripts]
dask-cuda-worker = "dask_cuda.cli:worker"
dask-cuda-config = "dask_cuda.cli:config"

[project.entry-points.dask_cli]
cuda = "dask_cuda.cli:cuda"

[project.optional-dependencies]
docs = [
    "numpydoc>=1.1.0",
    "sphinx",
    "sphinx-click>=2.7.1",
    "sphinx-rtd-theme>=0.5.1",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit dependencies.yaml and run `rapids-dependency-file-generator`.
cu12 = [
    "cuda-core[cu12]==0.3.*",
    "numba-cuda[cu12]>=0.19.1,<0.20.0a0",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit dependencies.yaml and run `rapids-dependency-file-generator`.
cu13 = [
    "cuda-core[cu13]==0.3.*",
    "numba-cuda[cu13]>=0.19.1,<0.20.0a0",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit dependencies.yaml and run `rapids-dependency-file-generator`.

[project.urls]
Homepage = "https://github.com/rapidsai/dask-cuda"
Documentation = "https://docs.rapids.ai/api/dask-cuda/stable/"
Source = "https://github.com/rapidsai/dask-cuda"

[tool.coverage.run]
disable_warnings = [
    "include-ignored",
]
include = [
    "dask_cuda/*",
]
omit = [
    "dask_cuda/tests/*",
]

[tool.ruff]
line-length = 88
extend-exclude = [
    "docs",
    "__init__.py",
]

[tool.ruff.lint]
ignore = [
    # Assigning lambda expression
    "E731",
    # Ambiguous variable names
    "E741",
    # whitespace before :
    "E203",
    # whitespace after ,
    "E231",
]

[tool.ruff.lint.isort]
combine-as-imports = true
order-by-type = true
known-first-party = [
    "dask_cuda",
]
default-section = "third-party"
section-order = [
    "future",
    "standard-library",
    "third-party",
    "dask",
    "rapids",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
"dask" = [
    "dask",
    "distributed",
]
"rapids" = [
    "rmm",
    "cuml",
    "cugraph",
    "dask_cudf",
    "cudf",
    "ucp",
]

[tool.pytest.ini_options]
filterwarnings = [
    "error::DeprecationWarning",
    "error::FutureWarning",
    # remove after https://github.com/rapidsai/dask-cuda/issues/1087 is closed
    "ignore:There is no current event loop:DeprecationWarning:tornado",
]

[tool.rapids-build-backend]
build-backend = "setuptools.build_meta"
dependencies-file = "dependencies.yaml"
disable-cuda = true
matrix-entry = "cuda_suffixed=true"

[tool.setuptools]
license-files = ["LICENSE"]

[tool.setuptools.dynamic]
version = {file = "dask_cuda/VERSION"}

[tool.setuptools.packages.find]
exclude = [
    "docs",
    "tests",
    "docs.*",
    "examples.*",
    "tests.*",
]

[tool.pydistcheck]
select = [
    "distro-too-large-compressed",
]

# PyPI limit is 100 MiB, fail CI before we get too close to that
max_allowed_size_compressed = '75M'
